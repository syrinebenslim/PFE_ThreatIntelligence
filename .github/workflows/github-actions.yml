name: Threat Intelligence GitHub Actions CI/CD pipeline
run-name: ${{ github.actor }} is testing out GitHub Actions 🚀
on: [ push ]
jobs:
  Explore-GitHub-Actions:
    runs-on: ubuntu-latest
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "🖥️ The workflow is now ready to test your code on the runner."
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pylint poetry

      - name: Poetry Install
        run: poetry install --sync --no-interaction
      - name: Poetry package
        run: poetry build
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - name: Deploy to Local VM
        env:
          VM_USER: ${{ secrets.VM_USER }}
          VM_PASSWORD: ${{ secrets.VM_PASSWORD }}
          VM_IP: ${{ secrets.VM_IP }}
        run: |
          # Install sshpass for password-based SSH
          sudo apt-get update && sudo apt-get install -y sshpass
          
          # Copy the built package to the VM
          sshpass -p "$VM_PASSWORD" scp dist/*.whl $VM_USER@$VM_IP:/tmp/
          
          # SSH into the VM and install the package
          sshpass -p "$VM_PASSWORD" ssh -o StrictHostKeyChecking=no $VM_USER@$VM_IP << EOF
            python3 -m pip install /tmp/*.whl --no-cache-dir
            rm -f /tmp/*.whl
          EOF
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - run: echo "🍏 This job's status is ${{ job.status }}."
