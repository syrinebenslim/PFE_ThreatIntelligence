name: Threat Intelligence GitHub Actions CI/CD pipeline
run-name: ${{ github.actor }} is testing out GitHub Actions üöÄ

on: [push]

jobs:
  Explore-GitHub-Actions:
    runs-on: self-hosted

    steps:
      # √âtape 1 : Informations sur le d√©clencheur
      - name: Display Trigger Info
        run: |
          echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
          echo "üêß This job is running on a ${{ runner.os }} server hosted by GitHub."
          echo "üîé Branch: ${{ github.ref }}, Repository: ${{ github.repository }}."

      # √âtape 2 : V√©rifier le code
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."

      # √âtape 3 : V√©rifier et configurer Python
      - name: Ensure Python is installed
        run: |
          echo "Ensuring Python is installed..."
          sudo apt-get update
          sudo apt-get install -y python3 python3-pip
          sudo ln -sf /usr/bin/python3 /usr/bin/python  # Cr√©e un lien symbolique vers python3
          python --version  # V√©rifier que python fonctionne

      # √âtape 4 : Installer Poetry
      - name: Install Poetry
        run: |
          echo "Installing Poetry..."
          curl -sSL https://install.python-poetry.org | python -
          echo 'export PATH="$HOME/.local/bin:$PATH"' >> ~/.bashrc
          source ~/.bashrc
          poetry --version  # V√©rifier que poetry fonctionne

      # √âtape 5 : Ajouter Poetry au PATH (au cas o√π il ne serait pas trouv√©)
      - name: Add Poetry to PATH
        run: |
          export PATH="$HOME/.local/bin:$PATH"
          poetry --version

      # √âtape 6 : Installer les d√©pendances avec Poetry
      - name: Poetry Install
        run: |
          poetry install --sync --no-interaction

      # √âtape 7 : Construire le package avec Poetry
      - name: Poetry Build
        run: |
